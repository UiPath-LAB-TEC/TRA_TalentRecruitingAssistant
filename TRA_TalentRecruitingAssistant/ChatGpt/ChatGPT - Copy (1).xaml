<Activity mc:Ignorable="sap sap2010" x:Class="Test" this:Test.in_JobTitle="RPADeveloper" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System.Text.RegularExpressions" xmlns:this="clr-namespace:" xmlns:uasc="clr-namespace:UiPath.Activities.System.Collections;assembly=UiPath.System.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uibi="http://schemas.uipath.com/workflow/infrastructure/baf/uibi" xmlns:uiisi="http://schemas.uipath.com/workflow/infrastructure/is/uiisi" xmlns:uoia="clr-namespace:UiPath.OpenAI.IntegrationService.Activities;assembly=UiPath.OpenAI.IntegrationService.Activities" xmlns:uoic="clr-namespace:UiPath.OpenAI.IntegrationService.Client;assembly=UiPath.OpenAI.IntegrationService" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dtbCandidates" Type="InOutArgument(sd:DataTable)" />
    <x:Property Name="in_JobDescription" Type="InArgument(x:String)" />
    <x:Property Name="in_ApiKey" Type="InArgument(x:String)" />
    <x:Property Name="in_JobTitle" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1410.4,2010.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Test_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="102">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.CSV</x:String>
      <x:String>UiPath.CSV.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Activities.System.Collections</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.Form.Activities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.BAF.Infrastructure.Entity</x:String>
      <x:String>UiPath.IntegrationService.Infrastructure.Descriptor</x:String>
      <x:String>UiPath.BAF.Infrastructure.Enums</x:String>
      <x:String>UiPath.BAF.Infrastructure.Telemetry</x:String>
      <x:String>UiPath.BAF.Infrastructure</x:String>
      <x:String>UiPath.BAF.Infrastructure.Connection</x:String>
      <x:String>UiPath.OpenAI.IntegrationService.Activities</x:String>
      <x:String>UiPath.IntegrationCore.Activities</x:String>
      <x:String>UiPath.BAF.Activities</x:String>
      <x:String>UiPath.BAF.Infrastructure.Contracts</x:String>
      <x:String>UiPath.OpenAI.IntegrationService.Client</x:String>
      <x:String>UiPath.OpenAI.IntegrationService.Client</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="138">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Form.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>UiPath.BAF.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Infrastructure</AssemblyReference>
      <AssemblyReference>UiPath.OpenAI.IntegrationService.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OpenAI.IntegrationService</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ChatGPT" sap:VirtualizedContainerService.HintSize="654.4,1945.6" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="CurrentJobDescriptionInput" />
      <Variable x:TypeArguments="x:String" Name="CandidateProfileInput" />
      <Variable x:TypeArguments="scg:List(njl:JObject)" Default="[new List(Of JObject)]" Name="list" />
      <Variable x:TypeArguments="x:Boolean" Name="valid" />
      <Variable x:TypeArguments="x:String" Name="injectText" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="592,243.2" sap2010:WorkflowViewState.IdRef="CommentOut_5">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,164.8" sap2010:WorkflowViewState.IdRef="Sequence_54">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[in_dtbCandidates]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="387.2,52.8" sap2010:WorkflowViewState.IdRef="ReadRange_3" SheetName="Sheet1" WorkbookPath="C:\Users\Aman.Gupta\Downloads\taail.xlsx">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ReadRange>
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <Assign sap:VirtualizedContainerService.HintSize="592,81.6" sap2010:WorkflowViewState.IdRef="Assign_55">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_JobTitle]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_JobTitle.Replace(" ","")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ReadTextFile File="{x:Null}" Content="[injectText]" DisplayName="Read Text File" FileName="[&quot;Job Descriptions\&quot;+in_JobTitle+&quot;Inject.txt&quot;]" sap:VirtualizedContainerService.HintSize="592,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_7" />
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Score" DataTable="[in_dtbCandidates]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="592,52.8" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:AddDataColumn>
    <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="OpenAI Explanation" DataTable="[in_dtbCandidates]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="592,52.8" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:AddDataColumn>
    <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[in_dtbCandidates]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="592,1029.6" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
      <ui:ForEachRow.Body>
        <ActivityAction x:TypeArguments="sd:DataRow">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="Row" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558.4,913.6" sap2010:WorkflowViewState.IdRef="Sequence_36">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence sap:VirtualizedContainerService.HintSize="496,801.6" sap2010:WorkflowViewState.IdRef="Sequence_35">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Int32" Name="ErrorTry" />
                <Variable x:TypeArguments="x:String" Name="MyAnswer" />
                <Variable x:TypeArguments="x:String" Name="description" />
                <Variable x:TypeArguments="x:String" Name="score" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign Error Counter" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_31">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[ErrorTry]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">0</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign Candidate Profile" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_51">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[CandidateProfileInput]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[Row("Complete Profile Details").ToString+Environment.NewLine+"Skills : RPA Development, Python , Java , Blueprism , UiPath"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Rainbird.ai.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Rainbird.ai.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Description">[CandidateProfileInput]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_Name">[Row("Name").ToString]</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_injectText">[injectText.Replace("{{Name}}",Row("Name").ToString)]</InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_Explanation">[description]</OutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="out_Score">[score]</OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <Assign DisplayName="Assign Score" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_56">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[Row("Score")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[score.ToString]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign DisplayName="Assign OpenAI Explanation" sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_57">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Object">[Row("OpenAI Explanation")]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Object">[description]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="433.6,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="790.4,3078.4" sap2010:WorkflowViewState.IdRef="Sequence_52">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[ErrorTry&lt;4]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="728,2966.4" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_4">
                      <ui:InterruptibleDoWhile.Body>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="692.8,2799.2" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="630.4,2687.2" sap2010:WorkflowViewState.IdRef="TryCatch_4">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <TryCatch.Try>
                              <Sequence sap:VirtualizedContainerService.HintSize="593.6,2456" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="OpenAIQuery" />
                                  <Variable x:TypeArguments="njl:JObject" Name="JobjectResponse" />
                                  <Variable x:TypeArguments="x:String" Name="OutputResponse" />
                                  <Variable x:TypeArguments="uoic:GenerateChatCompletion" Name="responseChatCompActvty" />
                                  <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="description" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Assign DisplayName="Assign OpenAI Query Initilization" sap:VirtualizedContainerService.HintSize="531.2,83.2" sap2010:WorkflowViewState.IdRef="Assign_37">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[OpenAIQuery]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">["Grade Candidate Resume From 1-10 based On my job Requirements in a short paragraph."+vbLf+vbLf+
"My job Requirements:"+vbLf+vbLf]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="531.2,318.4" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[in_JobDescription.Split(Environment.NewLine)]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="Item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,193.6" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign DisplayName="Assign Create OpenAI Query" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_38">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[OpenAIQuery]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[OpenAIQuery+Item+vbLf]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                                <Assign sap2010:Annotation.AnnotationText="Final output after appending candidate profile" DisplayName="Assign Final OpenAI Query" sap:VirtualizedContainerService.HintSize="531.2,112.8" sap2010:WorkflowViewState.IdRef="Assign_39">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[OpenAIQuery]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[vbLf+OpenAIQuery+"Candidate Resume:"+vbLf+vbLf+CandidateProfileInput]</InArgument>
                                  </Assign.Value>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </Assign>
                                <uasc:AppendItemToCollection x:TypeArguments="njl:JObject" Collection="[list]" DisplayName="Append item to collection" sap:VirtualizedContainerService.HintSize="531.2,141.6" sap2010:WorkflowViewState.IdRef="AppendItemToCollection`1_2" Result="[list]">
                                  <uasc:AppendItemToCollection.Items>
                                    <scg:List x:TypeArguments="InArgument(njl:JObject)" Capacity="4">
                                      <InArgument x:TypeArguments="njl:JObject" xml:space="preserve">[JObject.FromObject(
   New With {
		key .role = "user",
        key .content = OpenAIQuery
    }
)]</InArgument>
                                    </scg:List>
                                  </uasc:AppendItemToCollection.Items>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </uasc:AppendItemToCollection>
                                <uoia:GenerateChatCompletion Language="{x:Null}" ActivityInstanceId="0ef28834-0cff-4d7a-90da-e31c1c8abc07" BindingsVersion="2.1" BusinessEntityName="Generate Chat Completion" ConfiguredBusinessEntity="generateChatCompletion" ConnectionId="6ead7d5c-e6f2-4894-a207-915abfd77fb9" Connector="uipath-openai-openai" CrudOperation="Create" DesignConnectionEnabled="True" DisplayName="Generate Chat Completion" sap:VirtualizedContainerService.HintSize="531.2,152.8" sap2010:WorkflowViewState.IdRef="GenerateChatCompletion_6">
                                  <uoia:GenerateChatCompletion.BusinessEntity>
                                    <uibi:BusinessEntity Name="generateChatCompletion">
                                      <uibi:BusinessEntity.AllFields>
                                        <scg:List x:TypeArguments="uibi:EntityField" Capacity="15">
                                          <uiisi:OperationEntityField x:TypeArguments="uoic:GenerateChatCompletion" ArgumentDirection="In" ArgumentType="uoic:GenerateChatCompletion" DataType="GenerateChatCompletion" Description="The request data in JSON format for the chat completion" DisplayName="Completion Request" FormDataType="ExpressionTextBox" IsChildEntityField="False" IsCustomField="False" IsDefault="False" IsDeletable="True" IsHidden="True" IsIdField="False" IsMandatory="True" IsParameter="True" IsPriority="False" IsSelected="False" Location="Undefined" Name="body" ShouldFilterOnChange="False" />
                                          <uiisi:OperationEntityField x:TypeArguments="uoic:GenerateChatCompletion" x:Name="__ReferenceID28" ArgumentDirection="Out" ArgumentType="uoic:GenerateChatCompletion" DataType="GenerateChatCompletion" Description="The Generate Chat Completion object returned." DisplayName="Response" FormDataType="ExpressionTextBox" IsChildEntityField="False" IsCustomField="False" IsDefault="False" IsDeletable="True" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="Response" OutArgumentValue="[responseChatCompActvty]" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.ArgumentValue>
                                              <OutArgument x:TypeArguments="uoic:GenerateChatCompletion">[responseChatCompActvty]</OutArgument>
                                            </uiisi:OperationEntityField.ArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsPermanentlyHidden">False</x:Boolean>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                            <uiisi:OperationEntityField.Value>
                                              <VisualBasicReference x:TypeArguments="uoic:GenerateChatCompletion">[responseChatCompActvty]</VisualBasicReference>
                                            </uiisi:OperationEntityField.Value>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID15" ArgumentDirection="In" ArgumentType="x:String" DataType="String" DefaultValue="Write an email to a new sales lead" Description="The prompt to use for the chat completion(s) generation" DisplayName="Prompt" FormDataType="ExpressionTextBox" InArgumentValue="[OpenAIQuery + vblf + &quot;Please mention only the score in first line and nothing else. After that give description why the score&quot;]" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="True" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.prompt" Order="1" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.ArgumentValue>
                                              <InArgument x:TypeArguments="x:String">[OpenAIQuery + vblf + "Please mention only the score in first line and nothing else. After that give description why the score"]</InArgument>
                                            </uiisi:OperationEntityField.ArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                            <uiisi:OperationEntityField.Value>
                                              <VisualBasicValue x:TypeArguments="x:String">[OpenAIQuery + vblf + "Please mention only the score in first line and nothing else. After that give description why the score"]</VisualBasicValue>
                                            </uiisi:OperationEntityField.Value>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID16" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Instructions guide the AI to respond in a way that matches your intent. Defaults to null." DisplayName="Instruction" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.instruction" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID17" ArgumentDirection="In" ArgumentType="x:String" DataType="String" DefaultValue="gpt-4" Description="The large language model (LLM) to use for the chat completion. Defaults to gpt-4" DisplayName="Model Name" FormDataType="ExpressionTextBox" InArgumentValue="gpt-3.5-turbo" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.model" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.ArgumentValue>
                                              <InArgument x:TypeArguments="x:String">gpt-3.5-turbo</InArgument>
                                            </uiisi:OperationEntityField.ArgumentValue>
                                            <uiisi:OperationEntityField.EnumValues>
                                              <scg:List x:TypeArguments="x:String" Capacity="2">
                                                <x:String>gpt-4</x:String>
                                                <x:String>gpt-3.5-turbo</x:String>
                                              </scg:List>
                                            </uiisi:OperationEntityField.EnumValues>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                            <uiisi:OperationEntityField.Value>
                                              <Literal x:TypeArguments="x:String">gpt-3.5-turbo</Literal>
                                            </uiisi:OperationEntityField.Value>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Int32)" ArgumentValue="{x:Reference __ReferenceID1}" Value="{x:Reference __ReferenceID0}" x:Name="__ReferenceID18" ArgumentDirection="In" ArgumentType="s:Nullable(x:Int32)" DataType="Int32" DefaultValue="1920" Description="The maximum number of tokens allowed for the prompt and generated answer. Fewer tokens are less expensive. Defaults to 3840." DisplayName="Max Tokens" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.max_tokens" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID1">
                                                <Literal x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID0" Value="1920" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Int32)" ArgumentValue="{x:Reference __ReferenceID3}" Value="{x:Reference __ReferenceID2}" x:Name="__ReferenceID19" ArgumentDirection="In" ArgumentType="s:Nullable(x:Int32)" DataType="Int32" DefaultValue="1" Description="A number of at least 1.  This determines how many completion choices the AI will return. Defaults to 1." DisplayName="N" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.n" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID3">
                                                <Literal x:TypeArguments="s:Nullable(x:Int32)" x:Name="__ReferenceID2" Value="1" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID5}" Value="{x:Reference __ReferenceID4}" x:Name="__ReferenceID20" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="1" Description="⌘ ⌥ K&#xA;A number between 0 and 2.  Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. Defaults to 1." DisplayName="Temperature" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.temperature" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID5">
                                                <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID4" Value="1" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID7}" Value="{x:Reference __ReferenceID6}" x:Name="__ReferenceID21" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="1" Description="A number between 0 and 1.  The lower the number, the fewer tokens are considered. Defaults to 1." DisplayName="Top P" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.top_p" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID7">
                                                <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID6" Value="1" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Boolean)" ArgumentValue="{x:Reference __ReferenceID9}" Value="{x:Reference __ReferenceID8}" x:Name="__ReferenceID22" ArgumentDirection="In" ArgumentType="s:Nullable(x:Boolean)" DataType="Boolean" DefaultValue="false" Description="Whether to stream back partial progress. If set, tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Defaults to false." DisplayName="Stream" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.stream" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Boolean)" x:Name="__ReferenceID9">
                                                <Literal x:TypeArguments="s:Nullable(x:Boolean)" x:Name="__ReferenceID8" Value="False" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID23" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="Up to 4 sequences where the API will stop generating further tokens. The returned text will not contain the stop sequence. Defaults to null." DisplayName="Stop" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.stop" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID11}" Value="{x:Reference __ReferenceID10}" x:Name="__ReferenceID24" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="0" Description="Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Defaults to 0." DisplayName="Presence Penalty" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.presence_penalty" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID11">
                                                <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID10" Value="0" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="s:Nullable(x:Double)" ArgumentValue="{x:Reference __ReferenceID13}" Value="{x:Reference __ReferenceID12}" x:Name="__ReferenceID25" ArgumentDirection="In" ArgumentType="s:Nullable(x:Double)" DataType="Double" DefaultValue="0" Description="Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Defaults to 0." DisplayName="Frequency Penalty" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.frequency_penalty" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.InArgumentValue>
                                              <InArgument x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID13">
                                                <Literal x:TypeArguments="s:Nullable(x:Double)" x:Name="__ReferenceID12" Value="0" />
                                              </InArgument>
                                            </uiisi:OperationEntityField.InArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID26" ArgumentDirection="In" ArgumentType="x:String" DataType="String" Description="A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Defaults to null." DisplayName="User" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="body.user" Order="3" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                          </uiisi:OperationEntityField>
                                          <uiisi:OperationEntityField x:TypeArguments="x:String" x:Name="__ReferenceID27" ArgumentDirection="Out" ArgumentType="x:String" DataType="String" Description="The text for the top choice generated by the AI" DisplayName="Top Generated Text" FormDataType="ExpressionTextBox" IsChildEntityField="True" IsCustomField="False" IsDefault="False" IsDeletable="False" IsHidden="False" IsIdField="False" IsMandatory="False" IsPriority="False" IsSelected="False" Location="Undefined" Name="Response.text" OutArgumentValue="[OutputResponse]" ShouldFilterOnChange="False">
                                            <uiisi:OperationEntityField.ArgumentValue>
                                              <OutArgument x:TypeArguments="x:String">[OutputResponse]</OutArgument>
                                            </uiisi:OperationEntityField.ArgumentValue>
                                            <uiisi:OperationEntityField.Metadata>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <uiisi:CustomFieldsPriority x:Key="CustomFieldsPriority">Default</uiisi:CustomFieldsPriority>
                                              </scg:Dictionary>
                                            </uiisi:OperationEntityField.Metadata>
                                            <uiisi:OperationEntityField.Value>
                                              <VisualBasicReference x:TypeArguments="x:String">[OutputResponse]</VisualBasicReference>
                                            </uiisi:OperationEntityField.Value>
                                          </uiisi:OperationEntityField>
                                        </scg:List>
                                      </uibi:BusinessEntity.AllFields>
                                      <uibi:BusinessEntity.EntityMetadata>
                                        <uibi:EntityMetadata Metadata="{x:Reference __ReferenceID14}" DisplayName="Generate Chat Completion" EligibleOperations="1" IsCustomEntity="False" Name="generateChatCompletion" />
                                      </uibi:BusinessEntity.EntityMetadata>
                                      <uibi:BusinessEntity.Metadata>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object" x:Name="__ReferenceID14">
                                          <x:String x:Key="Object">generateChatCompletion</x:String>
                                          <x:String x:Key="Client">UiPath.OpenAI.IntegrationService.Client.GenerateChatCompletionAPIClient</x:String>
                                          <x:String x:Key="Operation">CreateGenerateChatCompletion</x:String>
                                          <x:String x:Key="Path">/generateChatCompletion</x:String>
                                        </scg:Dictionary>
                                      </uibi:BusinessEntity.Metadata>
                                      <uibi:BusinessEntity.SelectedFields>
                                        <scg:List x:TypeArguments="uibi:EntityField" Capacity="16">
                                          <x:Reference>__ReferenceID15</x:Reference>
                                          <x:Reference>__ReferenceID16</x:Reference>
                                          <x:Reference>__ReferenceID17</x:Reference>
                                          <x:Reference>__ReferenceID18</x:Reference>
                                          <x:Reference>__ReferenceID19</x:Reference>
                                          <x:Reference>__ReferenceID20</x:Reference>
                                          <x:Reference>__ReferenceID21</x:Reference>
                                          <x:Reference>__ReferenceID22</x:Reference>
                                          <x:Reference>__ReferenceID23</x:Reference>
                                          <x:Reference>__ReferenceID24</x:Reference>
                                          <x:Reference>__ReferenceID25</x:Reference>
                                          <x:Reference>__ReferenceID26</x:Reference>
                                          <x:Reference>__ReferenceID27</x:Reference>
                                          <x:Reference>__ReferenceID28</x:Reference>
                                        </scg:List>
                                      </uibi:BusinessEntity.SelectedFields>
                                      <uibi:BusinessEntity.TelemetryProperties>
                                        <scg:Dictionary x:TypeArguments="uibi:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                                      </uibi:BusinessEntity.TelemetryProperties>
                                    </uibi:BusinessEntity>
                                  </uoia:GenerateChatCompletion.BusinessEntity>
                                  <uoia:GenerateChatCompletion.CachedLookupValues>
                                    <scg:Dictionary x:TypeArguments="x:String, scg:List(uiisi:LookupValue)" />
                                  </uoia:GenerateChatCompletion.CachedLookupValues>
                                  <uoia:GenerateChatCompletion.DesignConnectionRequest>
                                    <uiisi:ConnectionParameters AuthType="ElementInstance" ConnectionId="6ead7d5c-e6f2-4894-a207-915abfd77fb9" ConnectionName="OpenAI Product Description" ConnectorKey="uipath-openai-openai">
                                      <uiisi:ConnectionParameters.TelemetryInfo>
                                        <uiisi:TelemetryInfo ActivityPack="UiPath.OpenAI.IntegrationService.Activities" ActivityPackVersion="6.1.0" Source="StudioDesktop" />
                                      </uiisi:ConnectionParameters.TelemetryInfo>
                                    </uiisi:ConnectionParameters>
                                  </uoia:GenerateChatCompletion.DesignConnectionRequest>
                                  <uoia:GenerateChatCompletion.SelectedFields>
                                    <scg:List x:TypeArguments="uibi:EntityField" Capacity="14">
                                      <x:Reference>__ReferenceID15</x:Reference>
                                      <x:Reference>__ReferenceID16</x:Reference>
                                      <x:Reference>__ReferenceID17</x:Reference>
                                      <x:Reference>__ReferenceID18</x:Reference>
                                      <x:Reference>__ReferenceID19</x:Reference>
                                      <x:Reference>__ReferenceID20</x:Reference>
                                      <x:Reference>__ReferenceID21</x:Reference>
                                      <x:Reference>__ReferenceID22</x:Reference>
                                      <x:Reference>__ReferenceID23</x:Reference>
                                      <x:Reference>__ReferenceID24</x:Reference>
                                      <x:Reference>__ReferenceID25</x:Reference>
                                      <x:Reference>__ReferenceID26</x:Reference>
                                      <x:Reference>__ReferenceID27</x:Reference>
                                      <x:Reference>__ReferenceID28</x:Reference>
                                    </scg:List>
                                  </uoia:GenerateChatCompletion.SelectedFields>
                                  <uoia:GenerateChatCompletion.TelemetryProperties>
                                    <scg:Dictionary x:TypeArguments="uibi:TelemetryGroup, scg:IDictionary(x:String, x:String)" />
                                  </uoia:GenerateChatCompletion.TelemetryProperties>
                                </uoia:GenerateChatCompletion>
                                <Assign sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_33">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[MyAnswer]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[responseChatCompActvty.Choices(0).Message.Content]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:IsMatch BuilderPattern="[0-9]|10" DisplayName="Is Match" sap:VirtualizedContainerService.HintSize="531.2,60" sap2010:WorkflowViewState.IdRef="IsMatch_1" Input="[MyAnswer]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;LIT&quot;,&quot;OperationName&quot;:&quot;Literal&quot;,&quot;OperationValue&quot;:&quot;[0-9]|10&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[0-9]|10" RegexOption="IgnoreCase, Compiled" Result="[valid]" />
                                <If Condition="[valid]" sap:VirtualizedContainerService.HintSize="531.2,454.4" sap2010:WorkflowViewState.IdRef="If_9">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <If.Then>
                                    <Sequence sap:VirtualizedContainerService.HintSize="476.8,271.2" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="listrez" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:Matches BuilderPattern="[0-9]/10" sap:VirtualizedContainerService.HintSize="433.6,60" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[MyAnswer]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;[0-9]\/10&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="[0-9]|10" RegexOption="IgnoreCase, Compiled" Result="[listrez]" />
                                      <Assign DisplayName="Assign Score" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_52">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Object">[Row("Score")]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Object">[CInt(listrez(0).ToString.Substring(0,1)).ToString]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </If.Then>
                                  <If.Else>
                                    <Assign DisplayName="Assign Score" sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_53">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Object">[Row("Score")]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Object">[CInt(MyAnswer.Split(" "c).Where(Function(f) IsNumeric(f)).FirstOrDefault)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </If.Else>
                                </If>
                                <ui:Matches BuilderPattern="(?&lt;=\n).*" sap:VirtualizedContainerService.HintSize="531.2,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[MyAnswer]" IsBuilderTabModified="True" Model="[{&quot;Index&quot;:0,&quot;OperationID&quot;:&quot;ADV&quot;,&quot;OperationName&quot;:&quot;Advanced&quot;,&quot;OperationValue&quot;:&quot;(?&lt;=\\n).*&quot;,&quot;QuantifierFirstValue&quot;:&quot;1&quot;,&quot;QuantifierID&quot;:&quot;EXT&quot;,&quot;QuantifierName&quot;:&quot;Exactly&quot;,&quot;QuantifierSecondValue&quot;:null}]" Pattern="(?&lt;=\n).*" RegexOption="IgnoreCase, Compiled" Result="[description]" />
                                <Assign DisplayName="Assign OpenAI Explanation" sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_54">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[Row("OpenAI Explanation")]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Object">[description(1).tostring]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="531.2,276" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                  <ui:CommentOut.Body>
                                    <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="449.6,197.6" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="387.2,85.6" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[MyAnswer.Count]" />
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:CommentOut>
                                <Assign sap:VirtualizedContainerService.HintSize="531.2,81.6" sap2010:WorkflowViewState.IdRef="Assign_34">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[ErrorTry]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">10</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </TryCatch.Try>
                            <TryCatch.Catches>
                              <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="596.8,22.4" sap2010:WorkflowViewState.IdRef="Catch`1_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ActivityAction x:TypeArguments="s:Exception">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="496,323.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_35">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">[ErrorTry]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">[ErrorTry+1]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Delay Duration="00:00:05" sap:VirtualizedContainerService.HintSize="433.6,90.4" sap2010:WorkflowViewState.IdRef="Delay_8" />
                                  </Sequence>
                                </ActivityAction>
                              </Catch>
                            </TryCatch.Catches>
                          </TryCatch>
                        </Sequence>
                      </ui:InterruptibleDoWhile.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InterruptibleDoWhile>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEachRow.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ForEachRow>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="592,52.8" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="545.6,845.6" sap2010:WorkflowViewState.IdRef="Sequence_50">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEachFileX DisplayName="For Each File in Folder" Folder="Job Descriptions" sap:VirtualizedContainerService.HintSize="483.2,733.6" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="False" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
            <ui:ForEachFileX.Body>
              <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
                <ActivityAction.Argument1>
                  <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
                </ActivityAction.Argument1>
                <ActivityAction.Argument2>
                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
                </ActivityAction.Argument2>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,476.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:ReadTextFile File="{x:Null}" Content="[CurrentJobDescriptionInput]" DisplayName="Read Text File" FileName="[CurrentFile.FullName]" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ReadTextFile_6">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ReadTextFile>
                  <ui:ReadRange Range="{x:Null}" AddHeaders="True" DataTable="[in_dtbCandidates]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="387.2,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="[CurrentFile.Name.Replace(&quot;.txt&quot;,&quot;&quot;).Trim]" WorkbookPath="Inventory List.xlsx" />
                  <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[in_dtbCandidates]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="387.2,116" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[CurrentFile.Name.Replace(&quot;.txt&quot;,&quot;&quot;).Trim]" WorkbookPath="Inventory List.xlsx" />
                </Sequence>
              </ActivityAction>
            </ui:ForEachFileX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEachFileX>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
  </Sequence>
</Activity>